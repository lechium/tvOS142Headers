//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ITIdleTimerStateServiceDelegate-Protocol.h"
#import "PBOpenAppTransitionerObserver-Protocol.h"
#import "PBPowerManagerObserver-Protocol.h"
#import "PBSceneManagerObserver-Protocol.h"

@class NSString;

@interface PBAttentionMonitor : NSObject <PBPowerManagerObserver, PBSceneManagerObserver, PBOpenAppTransitionerObserver, ITIdleTimerStateServiceDelegate>
{
}

+ (id)acquireIdleTimerAssertionWithConfiguration:(id)arg1 fromClient:(id)arg2 forReason:(id)arg3;	// IMP=0x000000010001d8b4
+ (void)appTransitioner:(id)arg1 willStartAnimationForAppTransition:(id)arg2;	// IMP=0x000000010001d5d4
+ (void)sceneManager:(id)arg1 didChangeHiliteStateForScene:(id)arg2;	// IMP=0x000000010001d33c
+ (void)sceneManager:(id)arg1 didChangeIdleTimerStateForScene:(id)arg2;	// IMP=0x000000010001d1d0
+ (void)sceneManager:(id)arg1 didChangeFocusFromScene:(id)arg2 toScene:(id)arg3;	// IMP=0x000000010001d100
+ (void)powerManagerDidWakeSystem:(id)arg1;	// IMP=0x000000010001cc9c
+ (void)powerManager:(id)arg1 willWakeSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001cb78
+ (void)powerManagerDidSleepSystem:(id)arg1;	// IMP=0x000000010001caa0
+ (void)powerManager:(id)arg1 willSleepSystemWithReason:(long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001c7f8
+ (_Bool)powerManagerAllowSystemToSleep:(id)arg1;	// IMP=0x000000010001c79c
+ (id)afterIdleInterval:(double)arg1 reason:(id)arg2 queue:(id)arg3 perform:(CDUnknownBlockType)arg4;	// IMP=0x000000010001c6ac
+ (id)afterIdleInterval:(double)arg1 reason:(id)arg2 queue:(id)arg3 perform:(CDUnknownBlockType)arg4 invalidationHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000010001c590
+ (id)makeIdleAction:(double)arg1 reason:(id)arg2 queue:(id)arg3 perform:(CDUnknownBlockType)arg4 invalidationHandler:(CDUnknownBlockType)arg5;	// IMP=0x000000010001bec0
+ (id)_activeApplicationScene;	// IMP=0x000000010001bdc8
+ (_Bool)_focusedSceneHasHiliteModeEnabled;	// IMP=0x000000010001bcf4
+ (_Bool)_focusedSceneWantsIdleDisabled;	// IMP=0x000000010001bc20
+ (void)_temporarilySuppressWakeForHIDEvents;	// IMP=0x000000010001bb24
+ (void)_noteConditionsMayHaveChanged:(id)arg1;	// IMP=0x000000010001b9f0
+ (void)_noteATimeoutChanged:(id)arg1;	// IMP=0x000000010001b864
+ (unsigned long long)_countOutstandingHighPriorityIdleAssertions;	// IMP=0x000000010001b6bc
+ (_Bool)_assertionIsHighPriority:(id)arg1;	// IMP=0x000000010001b618
+ (_Bool)_hasOutstandingIdleAssertionsThatPreventSleep;	// IMP=0x000000010001b5dc
+ (_Bool)_hasOutstandingIdleAssertionsThatPreventScreenSaver;	// IMP=0x000000010001b5a0
+ (_Bool)_hasOutstandingIdleAssertionsThatPreventCRD;	// IMP=0x000000010001b564
+ (_Bool)_hasOutstandingIdleAssertionsThatPreventNowPlaying;	// IMP=0x000000010001b528
+ (_Bool)_hasOutstandingIdleAssertions;	// IMP=0x000000010001b4d8
+ (void)resetAttention:(id)arg1;	// IMP=0x000000010001b1e4
+ (void)__attentionRegained:(id)arg1;	// IMP=0x000000010001ad94
+ (void)__reactToSomethingChanged:(id)arg1;	// IMP=0x000000010001ab2c
+ (void)__whackAttentionAwareness;	// IMP=0x000000010001a848
+ (void)__setupAttentionAwarenessForSleep;	// IMP=0x000000010001a04c
+ (void)__setupAttentionAwareness;	// IMP=0x00000001000196f0
+ (void)__configureStateMachineTimeOffsets;	// IMP=0x0000000100018e60
+ (void)initialize;	// IMP=0x0000000100017730
- (id)acquireIdleTimerAssertionWithConfiguration:(id)arg1 fromClient:(id)arg2 forReason:(id)arg3;	// IMP=0x000000010001d75c
- (void)appTransitioner:(id)arg1 willStartAnimationForAppTransition:(id)arg2;	// IMP=0x000000010001d4a8
- (void)sceneManager:(id)arg1 didChangeHiliteStateForScene:(id)arg2;	// IMP=0x000000010001cfd4
- (void)sceneManager:(id)arg1 didChangeIdleTimerStateForScene:(id)arg2;	// IMP=0x000000010001cea8
- (void)sceneManager:(id)arg1 didChangeFocusFromScene:(id)arg2 toScene:(id)arg3;	// IMP=0x000000010001cd58

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

