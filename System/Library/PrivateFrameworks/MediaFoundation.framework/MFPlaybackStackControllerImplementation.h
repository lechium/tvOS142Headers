/*
                       * This header is generated by classdump-dyld 1.5
                       * on Tuesday, November 10, 2020 at 10:20:39 PM Mountain Standard Time
                       * Operating System: Version 14.2 (Build 18K57)
                       * Image Source: /System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/MFPlaybackStackController.h>
#import <libobjc.A.dylib/MFQueueManagement.h>

@class NSNumber, NSArray, NSDictionary;

@interface MFPlaybackStackControllerImplementation : NSObject <MFPlaybackStackController, MFQueueManagement> {

	 delegate;
	 internalStack;

}

@property (assign,nonatomic) long long maximumPlayerQueueLength; 
@property (assign,__weak,nonatomic) id<MFPlaybackStackControllerDelegate> delegate; 
@property (readonly,nonatomic) long long currentState; 
@property (readonly,nonatomic) long long interruptedState; 
@property (readonly,nonatomic) long long currentItemTransition; 
@property (readonly,nonatomic) double currentTime; 
@property (readonly,nonatomic) float rate; 
@property (readonly,nonatomic) float targetRate; 
@property (readonly,nonatomic) NSNumber * targetTime; 
@property (readonly,nonatomic) id<MFPlayerItem> currentItem; 
@property (readonly,nonatomic) NSArray * nextItems; 
@property (readonly,nonatomic) id<MFQueuePlayerItem> currentQueueItem; 
@property (readonly,nonatomic) NSDictionary * stateDictionary; 
-(id)init;
-(id<MFPlaybackStackControllerDelegate>)delegate;
-(void)setDelegate:(id<MFPlaybackStackControllerDelegate>)arg1 ;
-(void)reset;
-(long long)currentState;
-(id<MFPlayerItem>)currentItem;
-(float)rate;
-(double)currentTime;
-(NSArray *)nextItems;
-(void)reloadItemsKeepingCurrentItem:(BOOL)arg1 ;
-(NSNumber *)targetTime;
-(id<MFQueuePlayerItem>)currentQueueItem;
-(void)setQueueWithInitialItem:(id)arg1 andPlay:(BOOL)arg2 identifier:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)restoreQueue:(/*^block*/id)arg1 ;
-(BOOL)setAudioSessionActive:(BOOL)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3 ;
-(void)skipWithDirection:(long long)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)jumpTo:(double)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)pauseWithFadeOut:(double)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(long long)interruptedState;
-(void)pauseWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)playWithRate:(float)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)shouldSkipJumpToItemStart:(long long)arg1 ;
-(void)beginScanningWithDirection:(long long)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)endScanningWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setRate:(float)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)initWithQueueController:(id)arg1 assetLoader:(id)arg2 errorController:(id)arg3 externalPlaybackController:(id)arg4 leaseController:(id)arg5 queue:(id)arg6 ;
-(void)setMaximumPlayerQueueLength:(long long)arg1 ;
-(float)targetRate;
-(NSDictionary *)stateDictionary;
-(void)updateAudioSessionWithConfiguration:(id)arg1 ;
-(long long)currentItemTransition;
-(void)clearPlaybackQueue;
-(long long)maximumPlayerQueueLength;
-(void)beginSeekingWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)seekTo:(double)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)endSeekingWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
@end

