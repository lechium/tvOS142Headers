//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "TrustedPeersHelperProtocol-Protocol.h"

@protocol NSXPCProxyCreating;

__attribute__((visibility("hidden")))
@interface CuttlefishXPCWrapper : NSObject <TrustedPeersHelperProtocol>
{
    id <NSXPCProxyCreating> _cuttlefishXPCConnection;	// 8 = 0x8
}

+ (_Bool)retryable:(id)arg1;	// IMP=0x00000001000273c8
- (void).cxx_destruct;	// IMP=0x00000001000232ec
@property(readonly) id <NSXPCProxyCreating> cuttlefishXPCConnection; // @synthesize cuttlefishXPCConnection=_cuttlefishXPCConnection;
- (void)removeEscrowCacheWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100023108
- (void)fetchViableEscrowRecordsWithContainer:(id)arg1 context:(id)arg2 forceFetch:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100022f28
- (void)getSupportAppInfoWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100022d50
- (void)requestHealthCheckWithContainer:(id)arg1 context:(id)arg2 requiresEscrowCheck:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100022b70
- (void)pushHealthInquiryWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100022998
- (void)reportHealthWithContainer:(id)arg1 context:(id)arg2 stateMachineState:(id)arg3 trustState:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010002278c
- (void)setRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 ckksKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100022564
- (void)fetchTrustStateWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010002238c
- (void)validatePeersWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x00000001000221b4
- (void)fetchCurrentPolicyWithContainer:(id)arg1 context:(id)arg2 modelIDOverride:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100021fc0
- (void)fetchPolicyDocumentsWithContainer:(id)arg1 context:(id)arg2 versions:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100021dcc
- (void)fetchEscrowContentsWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100021bf4
- (void)fetchViableBottlesWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100021a1c
- (void)updateTLKsWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x0000000100021810
- (void)setPreapprovedKeysWithContainer:(id)arg1 context:(id)arg2 preapprovedKeys:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010002161c
- (void)updateWithContainer:(id)arg1 context:(id)arg2 deviceName:(id)arg3 serialNumber:(id)arg4 osVersion:(id)arg5 policyVersion:(id)arg6 policySecrets:(id)arg7 syncUserControllableViews:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x00000001000213b0
- (void)attemptPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100021188
- (void)preflightPreapprovedJoinWithContainer:(id)arg1 context:(id)arg2 preapprovedKeys:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x0000000100020f94
- (void)joinWithContainer:(id)arg1 context:(id)arg2 voucherData:(id)arg3 voucherSig:(id)arg4 ckksKeys:(id)arg5 tlkShares:(id)arg6 preapprovedKeys:(id)arg7 reply:(CDUnknownBlockType)arg8;	// IMP=0x0000000100020d40
- (void)vouchWithRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 tlkShares:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100020b18
- (void)preflightVouchWithRecoveryKeyWithContainer:(id)arg1 context:(id)arg2 recoveryKey:(id)arg3 salt:(id)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010002090c
- (void)vouchWithBottleWithContainer:(id)arg1 context:(id)arg2 bottleID:(id)arg3 entropy:(id)arg4 bottleSalt:(id)arg5 tlkShares:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x00000001000206cc
- (void)preflightVouchWithBottleWithContainer:(id)arg1 context:(id)arg2 bottleID:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001000204d8
- (void)vouchWithContainer:(id)arg1 context:(id)arg2 peerID:(id)arg3 permanentInfo:(id)arg4 permanentInfoSig:(id)arg5 stableInfo:(id)arg6 stableInfoSig:(id)arg7 ckksKeys:(id)arg8 reply:(CDUnknownBlockType)arg9;	// IMP=0x000000010002026c
- (void)establishWithContainer:(id)arg1 context:(id)arg2 ckksKeys:(id)arg3 tlkShares:(id)arg4 preapprovedKeys:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100020044
- (void)prepareWithContainer:(id)arg1 context:(id)arg2 epoch:(unsigned long long)arg3 machineID:(id)arg4 bottleSalt:(id)arg5 bottleID:(id)arg6 modelID:(id)arg7 deviceName:(id)arg8 serialNumber:(id)arg9 osVersion:(id)arg10 policyVersion:(id)arg11 policySecrets:(id)arg12 syncUserControllableViews:(int)arg13 signingPrivKeyPersistentRef:(id)arg14 encPrivKeyPersistentRef:(id)arg15 reply:(CDUnknownBlockType)arg16;	// IMP=0x000000010001fd18
- (void)fetchEgoEpochWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001fb40
- (void)fetchAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f968
- (void)removeAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001f774
- (void)addAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 machineIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001f580
- (void)setAllowedMachineIDsWithContainer:(id)arg1 context:(id)arg2 allowedMachineIDs:(id)arg3 honorIDMSListChanges:(_Bool)arg4 reply:(CDUnknownBlockType)arg5;	// IMP=0x000000010001f388
- (void)localResetWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f1b0
- (void)resetWithContainer:(id)arg1 context:(id)arg2 resetReason:(long long)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001efd0
- (void)trustStatusWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001edf8
- (void)distrustPeerIDsWithContainer:(id)arg1 context:(id)arg2 peerIDs:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001ec04
- (void)departByDistrustingSelfWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001ea2c
- (void)dumpWithContainer:(id)arg1 context:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010001e854
- (void)pingWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010001e6d4
- (id)initWithCuttlefishXPCConnection:(id)arg1;	// IMP=0x000000010001e65c

@end

