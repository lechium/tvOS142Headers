//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "TMDaemonCore-Protocol.h"
#import "TMTimeZoneManagerDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSUUID, TMBackgroundNtpSource, TMPreferences, TMTimeSynthesizer, TMTimeZone, TMTimeZoneManager;
@protocol OS_os_transaction, TMMonotonicClock, TMTimeProvider;

@interface TMDaemonCore : NSObject <TMTimeZoneManagerDelegate, TMDaemonCore>
{
    TMTimeZoneManager *_timeZoneManager;	// 8 = 0x8
    TMTimeSynthesizer *_timeSynthesizer;	// 16 = 0x10
    TMTimeSynthesizer *_clamp;	// 24 = 0x18
    TMBackgroundNtpSource *_ntpSource;	// 32 = 0x20
    _Bool _systemTimeSet;	// 40 = 0x28
    NSMutableSet *_plugins;	// 48 = 0x30
    TMPreferences *_prefs;	// 56 = 0x38
    double _settimeofdayThreshold;	// 64 = 0x40
    NSMutableArray *_pendingSetupTimeHandlers;	// 72 = 0x48
    double _rtcBBActiveTimeCheck;	// 80 = 0x50
    NSMutableDictionary *_timeProviders;	// 88 = 0x58
    NSObject<OS_os_transaction> *_keepAliveTransaction;	// 96 = 0x60
    NSUUID *hostUUID;	// 104 = 0x68
    NSUUID *bootUUID;	// 112 = 0x70
    unsigned long long clampDiscardCount;	// 120 = 0x78
    double lastCachedRTC;	// 128 = 0x80
    _Bool _requiresActiveBBTime;	// 136 = 0x88
    unsigned int _rtcResetCount;	// 140 = 0x8c
    id <TMMonotonicClock> _clock;	// 144 = 0x90
}

@property(retain, nonatomic) id <TMMonotonicClock> clock; // @synthesize clock=_clock;
@property(nonatomic) _Bool requiresActiveBBTime; // @synthesize requiresActiveBBTime=_requiresActiveBBTime;
@property unsigned int rtcResetCount; // @synthesize rtcResetCount=_rtcResetCount;
@property(nonatomic, getter=isSystemTimeSet) _Bool systemTimeSet; // @synthesize systemTimeSet=_systemTimeSet;
- (void)addTimeProvider:(id)arg1 forKey:(id)arg2;	// IMP=0x0000000100010260
@property(readonly, nonatomic) id <TMTimeProvider> timeProvider;
@property(readonly) TMTimeZone *computedTimeZone;
- (void)timeZoneManager:(id)arg1 shouldFetch:(id)arg2;	// IMP=0x00000001000100ec
- (void)timeZoneManager:(id)arg1 didComputeResult:(id)arg2;	// IMP=0x0000000100010038
- (void)timeZoneManager:(id)arg1 didReset:(id)arg2;	// IMP=0x000000010000ffe0
- (void)resetTimeZone:(id)arg1;	// IMP=0x000000010000fd34
- (void)setSourceTimeZone:(id)arg1;	// IMP=0x000000010000f474
- (void)setSourceUnavailable:(id)arg1;	// IMP=0x000000010000f1c8
- (void)setSourceAvailable:(id)arg1;	// IMP=0x000000010000ef1c
- (void)setSourceTime:(id)arg1;	// IMP=0x000000010000e8f8
- (void)checkActiveTimeSourceRequired;	// IMP=0x000000010000e378
@property(nonatomic, getter=isAutomaticTimeZoneEnabled) _Bool automaticTimeZoneEnabled;
@property(nonatomic, getter=isAutomaticTimeEnabled) _Bool automaticTimeEnabled;
- (void)executeCommand:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ae00
@property(nonatomic, getter=isSystemTimeZoneSet) _Bool systemTimeZoneSet;
- (void)testAndApplySystemTime;	// IMP=0x00000001000093a4
- (void)addPlugin:(id)arg1;	// IMP=0x0000000100008d2c
- (void)dealloc;	// IMP=0x0000000100008b00
- (id)initWithTimeZoneRules:(id)arg1 monotonicClock:(id)arg2 preferences:(id)arg3;	// IMP=0x0000000100007cd8
- (void)handleShutdown;	// IMP=0x0000000100007844
- (void)setAccurateThresholds:(_Bool)arg1;	// IMP=0x0000000100007834

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

